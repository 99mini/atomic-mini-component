@keyframes circular-progress-infinite-animation {
  0% {
    --angle: -1deg;
  }

  100% {
    --angle: 360deg;
  }
}

@property --angle {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

.YnI-Progress-Root {
  &.YnI-CircularProgress .YnI-CircularProgress-Circle {
    display: flex;
    justify-content: center;
    align-items: center;

    width: var(--circular-progress-size);
    height: var(--circular-progress-size);

    border-radius: 50%;

    &.YnI-CircularProgress-indeterminate {
      background: radial-gradient(closest-side, white 79%, transparent 80% 100%),
        conic-gradient(
          var(--circular-progress-color) var(--angle),
          transparent calc(var(--angle))
        );
      animation: circular-progress-infinite-animation 2s ease-in-out infinite;
    }

    &.YnI-CircularProgress-determinate {
      background: radial-gradient(closest-side, white 79%, transparent 80% 100%),
        conic-gradient(
          var(--circular-progress-color) var(--circular-progress-value),
          rgb(240, 240, 240) calc(var(--circular-progress-value))
        );
    }

    &.YnI-CircularProgress-buffer {
      background: radial-gradient(closest-side, white 79%, transparent 80% 100%),
        conic-gradient(
          var(--circular-progress-color) var(--circular-progress-value),
          rgb(240, 240, 240) calc(var(--circular-progress-value))
        );
    }

    .YnI-CircularProgress-Progress {
      height: 0;
      width: 0;
    }
  }
}
